import os

import openpyxl
from aiogram import F
from aiogram import types
from aiogram.filters import Command
from aiogram.fsm.context import FSMContext
from aiogram.types import FSInputFile
from aiogram.types import Message
from loguru import logger

from database.database import UserStart
from keyboards.admin_keyboards import admin_keyboard
from system.dispatcher import bot, ADMIN_USER_ID
from system.dispatcher import dp
from system.dispatcher import router


@dp.message(F.text == "/admin_start")
async def admin_start_handler(message: Message) -> None:
    user_id = message.from_user.id
    user_name = message.from_user.username
    user_first_name = message.from_user.first_name
    user_last_name = message.from_user.last_name
    user_date = message.date.strftime("%Y-%m-%d %H:%M:%S")
    logger.info(f"{user_id} {user_name} {user_first_name} {user_last_name} {user_date}")
    sign_up_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å Admin"
    await bot.send_message(message.from_user.id, sign_up_text, reply_markup=admin_keyboard(),
                           disable_web_page_preview=True)


@router.callback_query(F.data == "admin_commands")
async def admin_send_start(callback_query: types.CallbackQuery, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start, –æ–Ω –∂–µ –ø–æ—Å—Ç –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è üëã"""
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    """–ê–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å"""
    if callback_query.from_user.id not in ADMIN_USER_ID:
        await bot.send_message(callback_query.from_user.id, text="–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.")
        return
    await bot.send_message(callback_query.from_user.id, text="–ö–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω–∞:\n\n"

                                                             "<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞ –∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</b>\n\n"

                                                             "<b>–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–µ–∫—Å—Ç–∞:</b>\n"
                                                             "‚úîÔ∏è /edit_main_menu - —Ç–µ–∫—Å—Ç –º–µ–Ω—é –±–æ—Ç–∞\n"
                                                             "‚úîÔ∏è /edit_instructions - —Ç–µ–∫—Å—Ç –º–µ–Ω—é '–∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è'\n"

                                                             "<b>–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö:</b>\n"
                                                             "‚úîÔ∏è /get_users_who_launched_the_bot - –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–ø—É—Å–∫–∞—é—â–∏—Ö –±–æ—Ç–∞\n\n"

                                                             "/start - –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é\n", parse_mode="HTML")


def create_excel_file_start(orders):
    workbook = openpyxl.Workbook()
    sheet = workbook.active
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏ —Å—Ç–æ–ª–±—Ü–æ–≤
    sheet['A1'] = 'ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è'
    sheet['B1'] = 'username'
    sheet['C1'] = '–ò–º—è'
    sheet['D1'] = '–§–∞–º–∏–ª–∏—è'
    sheet['E1'] = '–î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞'
    # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã–º–∏ –∑–∞–∫–∞–∑–æ–≤
    for index, order in enumerate(orders, start=2):
        sheet.cell(row=index, column=1).value = order[0]  # ID –∞–∫–∫–∞—É–Ω—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        sheet.cell(row=index, column=2).value = order[1]  # username
        sheet.cell(row=index, column=3).value = order[2]  # –ò–º—è
        sheet.cell(row=index, column=4).value = order[3]  # –§–∞–º–∏–ª–∏—è
        sheet.cell(row=index, column=5).value = order[4]  # –î–∞—Ç–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞

    return workbook  # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç workbook


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def reading_from_database():
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –≤—Å–µ –∑–∞–ø–∏—Å–∏ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã UserStart
    query = UserStart.select()

    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ –∏–∑ –∫–æ—Ä—Ç–µ–∂–µ–π —Å –¥–∞–Ω–Ω—ã–º–∏ –¥–ª—è –ø–µ—Ä–µ–¥–∞—á–∏ –≤ create_excel_file_start
    orders = [
        (user.telegram_id, user.telegram_username, user.user_first_name, user.user_last_name, user.user_date)
        for user in query
    ]

    return orders


@router.message(Command("get_users_who_launched_the_bot"))
async def get_users_who_launched_the_bot(message: types.Message, state: FSMContext):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –∑–∞–ø—É—Å–∫–∞—é—â–∏—Ö –±–æ—Ç–∞"""
    await state.clear()  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ç–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –º–∞—à–∏–Ω—ã —Å–æ—Å—Ç–æ—è–Ω–∏–π
    try:
        if message.from_user.id not in [535185511, 301634256]:
            await message.reply('–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ.')
            return
        orders = reading_from_database()
        workbook = create_excel_file_start(orders)  # –°–æ–∑–¥–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ Excel
        filename = '–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞–ø—É—Å—Ç–∏–≤—à–∏—Ö –±–æ—Ç–∞.xlsx'
        workbook.save(filename)  # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
        file = FSInputFile(filename)
        text = ("–î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –≤ –±–æ—Ç–µ\n\n"
                "–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –Ω–∞—á–∞–ª—å–Ω–æ–µ –º–µ–Ω—é –Ω–∞–∂–º–∏ –Ω–∞ /start –∏–ª–∏ /help")
        await bot.send_document(message.from_user.id, document=file, caption=text)  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        os.remove(filename)  # –£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
    except Exception as e:
        logger.error(e)


def register_greeting_admin_handler():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(admin_start_handler)
    dp.message.register(admin_send_start)
