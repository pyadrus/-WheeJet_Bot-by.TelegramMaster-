import asyncio
import glob
import os

from aiogram import types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import FSInputFile
from aiogram.types import Message
from loguru import logger

from database.database import get_customer_by_warranty_number
from handlers.user.guarantee_chek_handlers import filling_data_hourly_rate, doc2pdf_libreoffice
from keyboards.keyboards import back_to_main_menu_keyboard
from keyboards.keyboards import filled_data_keyboard
from keyboards.payment_keyboards import back_to_main_menu_keyboard_garan
from system.dispatcher import bot, dp, router


def find_file_by_code(path, code):
    # –§–æ—Ä–º–∏—Ä—É–µ–º —à–∞–±–ª–æ–Ω –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞, –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å
    file_pattern = '*' + code + '.pdf'
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é glob.glob –¥–ª—è –ø–æ–∏—Å–∫–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏—Ö —à–∞–±–ª–æ–Ω—É
    files = glob.glob(os.path.join(path, file_pattern))
    if len(files) == 0:
        logger.info(f"–§–∞–π–ª —Å –∫–æ–¥–æ–º {code} –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        return None
    else:
        logger.info(files[0])  # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
        return files[0]


class FormeditDownloadWarrantyCard(StatesGroup):
    text_download_warranty_card = State()


@router.callback_query(F.data == "download_warranty_card")
async def download_warranty_card_handlers(callback_query: types.CallbackQuery, state: FSMContext) -> None:
    user_id = callback_query.from_user.id
    user_name = callback_query.from_user.username
    user_first_name = callback_query.from_user.first_name
    user_last_name = callback_query.from_user.last_name
    logger.info(f"{user_id} {user_name} {user_first_name} {user_last_name}")
    text = "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Ç–∞–ª–æ–Ω–∞ –∫–æ—Ç–æ—Ä—ã–π —Ö–æ—Ç–∏—Ç–µ –ø–æ–ª—É—á–∏—Ç—å"
    await bot.send_message(callback_query.from_user.id,
                           text,
                           disable_web_page_preview=True,
                           parse_mode="HTML"
                           )
    await state.set_state(FormeditDownloadWarrantyCard.text_download_warranty_card)


@router.message(FormeditDownloadWarrantyCard.text_download_warranty_card)
async def phone_number(message: Message, state: FSMContext):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –æ—Ç–ø—Ä–∞–≤–∫–∏ –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Ç–∞–ª–æ–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é Telegram –±–æ—Ç–∞"""

    contact = message.html_text
    logger.info(contact)
    await state.clear()
    # –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
    files = find_file_by_code('completed_form', contact)
    if files is None:
        await message.answer("–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Ç–∞–ª–æ–Ω –µ—â–µ –Ω–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω.", reply_markup=back_to_main_menu_keyboard())

        customer = get_customer_by_warranty_number(warranty_number_value=contact)

        if customer:

            telegram_id = customer.telegram_id,
            telegram_username = customer.telegram_username,
            product_code = customer.product_code,
            order_number = customer.order_number,
            product_photo = customer.product_photo,
            full_name = customer.full_name,
            contact = customer.contact,
            communication_method = customer.communication_method,
            date_of_purchase = customer.date_of_purchase,
            tipe_shop = customer.tipe_shop,
            warranty_number = customer.warranty_number  # –ù–æ–º–µ—Ä –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Ç–∞–ª–æ–Ω–∞

            print(f"–ù–∞–π–¥–µ–Ω–æ: {telegram_id}, {telegram_username}, {product_code}, {order_number}, {product_photo}, {full_name}, {contact}, {communication_method}, {date_of_purchase}, {tipe_shop}, {warranty_number}")
        else:
            print("–ó–∞–ø–∏—Å—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")

        # –û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ –≤—Å–µ–π —Å–æ–±—Ä–∞–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
        response_message = (f"ü§ñ –ë–ª–∞–≥–æ–¥–∞—Ä—é –∑–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—É—é –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é!\n\n"
    
                            f"–ù–æ–º–µ—Ä –≥–∞—Ä–∞–Ω—Ç–∏–π–Ω–æ–≥–æ —Ç–∞–ª–æ–Ω–∞: {warranty_number}\n"  # –ê—Ä—Ç–∏–∫—É–ª —Ç–æ–≤–∞—Ä–∞
                            )

        file_dog = f'form/–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π_—Ç–∞–ª–æ–Ω.docx'

        filling_data_hourly_rate(file_dog, product_code[0], full_name[0], date_of_purchase[0], communication_method[0], contact[0],
                                 warranty_number, f'completed_form/–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π_—Ç–∞–ª–æ–Ω_{warranty_number}.docx', '1 –≥–æ–¥')
        await state.clear()
        doc2pdf_libreoffice(f'completed_form/–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π_—Ç–∞–ª–æ–Ω_{warranty_number}.docx',
                            f'completed_form/–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π_—Ç–∞–ª–æ–Ω_{warranty_number}.pdf')
        await asyncio.sleep(2)
        file = FSInputFile(f'completed_form/–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π_—Ç–∞–ª–æ–Ω_{warranty_number}.pdf')
        await bot.send_document(message.from_user.id, document=file, caption=response_message,
                                parse_mode="HTML", reply_markup=filled_data_keyboard())  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é

    else:
        logger.info(files)  # –í—ã–≤–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –≤ –ø–∞–ø–∫–µ 'completed_form'
        file = FSInputFile(files)
        response_message = f"–ì–∞—Ä–∞–Ω—Ç–∏–π–Ω—ã–π —Ç–∞–ª–æ–Ω ‚Ññ {contact}"
        await bot.send_document(message.from_user.id, document=file, caption=response_message,
                                parse_mode="HTML", reply_markup=back_to_main_menu_keyboard_garan())  # –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–∞–π–ª–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é


def register_download_warranty_card_handlers():
    """–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –¥–ª—è –±–æ—Ç–∞"""
    dp.message.register(download_warranty_card_handlers)
